#include <iostream>
#include <clocale>

int main(int argc, char* argv[])
{	// clear				очистить терминал
	// git config -- global user.name "example" 
	// git config -- global user.email "example@.com"
	
	// git add		Для добавление данных внутрь локального репозитория
	//			Sorce.cpp = добавим файл
	//			bin/ 		добавляем папку
	//			*.h 		неавжно как называется файл, добавить ВСЕ файлы с расширением .h
	//			*.* 		неавжно как называется файл, неважно с каким расширением. Добавить все файлы.	
	//			example.*	ВАЖНО как называется, неважно с каким расширением. Добавить все файлы с таким названием.  
	//			* или .		добавляем все файлы которые находятся в проекте.
	// git status			посмотреть статус всех файлов ожидающих на добавление
	// git rm --cached Git_documentation/main.h		Для того, что бы удалить из списка ожидания (кэша) и нужно указать ПОЛНЫЙ ПУТЬ.
	// git rm -r --cached . Удалить все файлы из ожидания
	

	// git commit -m " коментарий по желанию "	добавляем коммит с коментарием. Лучше указывать, что бы понимать в дальнейшем

	// Создаём файл с расширением .gitignore (без названия,только расширение). В этот файл можем записывать те файлы, которые нужно будет проигнорировать. 
	
	// git reset --soft HEAD~1		отменяем 1 коммит мягко (код остался)
	//			 --hard HEAD~1		отменяем 1 коммит жёстко (код откатился вместе с коммитом)
	
	// git branch	 "название ветки"	создать дополнительную ветку 
	// git branch -d "название ветки"	удалить ветку
	// git branch -M "название ветки"	переименовать основную ветку
	
	// git checkout  "название ветки"	перейти на другую ветку
	// git merge	 "название ветки"	сделать слияние основной ветки с указанной. Нужно обязательно быть на основной ветке 




	// git remote add название_реп	 https://url			подключаемся к удалённому репозиторию. add origin - добавить название для удалённого реп
	// git remote remove название_реп						отключиться от репозитория
	// git push -u название_реп	название_основной_ветки		выгрузить локальный реп в удалённый реп 
	
	// cd "C:\USWERS\..."									перейти в папку
	// git clone url										будет скачен весь проект в эту папку где нахожусь 
	// git pull												синхронизировать локальный репозиторий с удалённым


	
	return 0;
}
